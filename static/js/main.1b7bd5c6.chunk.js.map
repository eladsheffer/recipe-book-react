{"version":3,"sources":["logo.svg","components/RecipeNavbar.js","pages/HomePage.js","pages/LoginPage.js","components/RecipeCard.js","pages/RecipesPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecipeNavbar","props","state","redirectToHome","logout","bind","this","handleLogout","window","location","hash","setState","activeUser","to","signupLink","Nav","Link","href","loginLink","logoutLink","onClick","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","React","Component","HomePage","Jumbotron","Container","Button","variant","LoginPage","invalidLogin","successLogin","emailInput","createRef","pwdInput","login","users","newActiveUser","i","length","email","current","value","pwd","handleLogin","Alert","show","Form","Group","controlId","Label","Control","ref","type","placeholder","Text","block","RecipeCard","recipe","Card","Img","src","img","Body","Title","name","desc","RecipesPage","showModal","newRecipeImg","file","URL","openModal","closeModal","createRecipe","imgChange","nameInput","descInput","imgInput","ev","target","files","createObjectURL","newRecipe","addRecipe","recipes","recipesCards","map","Col","key","lg","md","fname","Row","Modal","onHide","size","Header","closeButton","as","column","sm","accept","onChange","Image","fluid","Footer","App","allUsers","jsonUsers","allRecipes","jsonRecipes","activeUserRecipes","console","log","filter","userId","concat","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b7bd5c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\n\nclass RecipeNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectToHome: false\n        }\n\n        this.logout = this.logout.bind(this);\n    }\n\n    logout() {\n        this.props.handleLogout();\n\n        if (window.location.hash != \"#/\") {\n            this.setState({redirectToHome: true})\n        }\n    }\n\n    // // this function in onvoked after every render (but not the first)\n    // componentDidUpdate() {\n    //     if (this.state.redirectToHome) {\n    //         this.setState({redirectToHome: false})\n    //     }\n    // }\n\n    \n\n    render() {\n        const { activeUser } = this.props;\n        const { redirectToHome } = this.state;\n\n        if (redirectToHome) {\n            return <Redirect to=\"/\"/>\n        }\n\n        const signupLink = !activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\n        const loginLink = !activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\n        const logoutLink = activeUser ? <Nav.Link onClick={this.logout}>Logout</Nav.Link> : null;\n\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Recipe Book</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"#/recipes\">Recipes</Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        {signupLink}\n                        {loginLink}\n                        {logoutLink}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default RecipeNavbar;","import React from 'react'\nimport {Jumbotron, Button, Container} from 'react-bootstrap'\nimport RecipeNavbar from '../components/RecipeNavbar';\n\nclass HomePage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n        const { activeUser, handleLogout } = this.props;\n\n        return (\n            <div>\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout}/>\n                <Jumbotron>\n                    <Container>\n                        <h1 className=\"display-3\">Recipe Book</h1>\n                        <p>Master your recipes</p>\n                        <p>\n                            <Button variant=\"primary\" href=\"#/login\">Login</Button>\n                        </p>\n                    </Container>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            invalidLogin: false,\n            successLogin: false\n        }\n\n        this.emailInput = React.createRef();\n        this.pwdInput = React.createRef();\n\n        this.login = this.login.bind(this);\n    }\n\n    login() {\n\n        const { users } = this.props;\n        let newActiveUser = null;\n        for (let i = 0; i < users.length && !newActiveUser; i++) {\n            if (users[i].email === this.emailInput.current.value &&\n                users[i].pwd === this.pwdInput.current.value) {\n                    newActiveUser = users[i];\n                }\n        }\n\n        if (newActiveUser) {\n            this.props.handleLogin(newActiveUser);\n            this.setState({successLogin: true});\n\n        } else {\n            this.setState({invalidLogin: true});\n        }\n\n\n    }\n\n    render() {\n\n        if (this.state.successLogin) {\n            return <Redirect to=\"/recipes\"/>\n        }\n\n        return (\n            <div className=\"login\">\n                <h1>Login to Recipe Book</h1>\n                <p>or <a href=\"#/signup\">create an account</a></p>\n                <Alert variant=\"danger\" show={this.state.invalidLogin}>\n                    Invalid email or password!\n                </Alert>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control ref={this.emailInput} type=\"email\" placeholder=\"Enter email\" value=\"elad@elad.com\"/>\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control ref={this.pwdInput}  type=\"password\" placeholder=\"Password\" value=\"123\"/>\n                    </Form.Group>\n                    <Button variant=\"success\" type=\"button\" block onClick={this.login}>\n                        Login\n                    </Button>\n                </Form>\n\n            </div>\n\n        );\n    }\n}\n\nexport default LoginPage;","import React from 'react'\nimport { Card } from 'react-bootstrap'\n\n\nclass RecipeCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { }\n    }\n    render() {\n        const { recipe } = this.props;\n        return (\n            <Card className=\"recipe\">\n                <Card.Img variant=\"top\" src={recipe.img} />\n                <Card.Body>\n                    <Card.Title>{recipe.name}</Card.Title>\n                    <Card.Text>\n                        {recipe.desc}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\n\n\n\nexport default RecipeCard;","import React from 'react'\nimport RecipeNavbar from '../components/RecipeNavbar'\nimport { Container, Row, Col, Button, Modal, Form, Image } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\nimport RecipeCard from '../components/RecipeCard'\n\n\nclass RecipesPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            newRecipeImg: {\n                file: null,\n                URL: \"\"\n            }\n        }\n\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.createRecipe = this.createRecipe.bind(this);\n        this.imgChange = this.imgChange.bind(this);\n\n\n        this.nameInput = React.createRef();\n        this.descInput = React.createRef();\n        this.imgInput = React.createRef();\n    }\n\n    imgChange(ev) {\n\n        let newRecipeImg = {};\n        newRecipeImg.file = ev.target.files[0];\n        if (newRecipeImg.file) {\n            newRecipeImg.URL = URL.createObjectURL(newRecipeImg.file);\n        } else {\n            newRecipeImg.URL = \"\";\n        }\n\n        this.setState({newRecipeImg});\n    }\n\n\n    openModal() {\n        this.setState({ showModal: true })\n    }\n\n    closeModal() {\n        this.setState({ showModal: false })\n    }\n\n    createRecipe() {\n        const newRecipe = {\n            name: this.nameInput.current.value,\n            desc: this.descInput.current.value,\n            img: this.state.newRecipeImg.URL,\n        }\n\n        this.props.addRecipe(newRecipe);\n        this.closeModal();\n    }\n\n    render() {\n        const { activeUser, handleLogout, recipes } = this.props;\n        const { showModal, newRecipeImg } = this.state;\n        //const showModal = this.state.showModal;\n\n        if (!activeUser) {\n            return <Redirect to=\"/\" />\n        }\n\n        const recipesCards = recipes.map(recipe => <Col key={recipe.id} lg=\"3\" md=\"6\"><RecipeCard recipe={recipe} /></Col>)\n\n        return (\n            <div>\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout} />\n                <Container>\n                    <div className=\"recipes-header\">\n                        <h1>{activeUser.fname}'s Recipes</h1>\n                        <Button variant=\"primary\" onClick={this.openModal}>New Recipe</Button>\n                    </div>\n                    <Row>\n                        {recipesCards}\n                    </Row>\n                </Container>\n\n\n                <Modal show={showModal} onHide={this.closeModal} size=\"lg\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>New Recipe</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                                <Form.Label column sm={2}>\n                                    Name\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control ref={this.nameInput} type=\"text\" placeholder=\"Recipe name\" />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                                <Form.Label column sm={2}>\n                                    Description\n                                </Form.Label>\n                                <Col sm={10}>\n                                    <Form.Control ref={this.descInput} type=\"text\" placeholder=\"Recipe description\" />\n                                </Col>\n                            </Form.Group>\n\n                            <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                                <Form.Label column sm={2}>\n                                    Image\n                                </Form.Label>\n                                <Col sm={6}>\n                                    <Form.Control type=\"file\" placeholder=\"Recipe image URL\" accept=\"image/*\" onChange={this.imgChange}/>\n                                </Col>\n                                <Col sm={4}>\n                                    <Image src={newRecipeImg.URL} fluid/>\n                                </Col>\n                            </Form.Group>\n\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeModal}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\" onClick={this.createRecipe}>\n                            Create Recipe\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </div>\n        );\n    }\n}\n\nexport default RecipesPage;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RecipesPage from './pages/RecipesPage';\nimport jsonUsers from './data/users'\nimport jsonRecipes from './data/recipes'\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeUser: null,\n    //   activeUser:   {\n    //     \"id\": 1,\n    //     \"fname\": \"Elad\",\n    //     \"lname\": \"Sheffer\",\n    //     \"email\": \"elad@elad.com\",\n    //     \"pwd\": \"123\"\n    // },\n      allUsers: jsonUsers,\n      allRecipes: jsonRecipes,\n      activeUserRecipes: []\n      // hack for starting with my recipes\n      // activeUserRecipes: jsonRecipes.filter(recipe => recipe.userId === 1)\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.addRecipe = this.addRecipe.bind(this);\n\n    console.log(this.state.allRecipes);\n  }\n\n  handleLogout() {\n    this.setState({activeUser: null});\n  }\n\n  handleLogin(activeUser) {\n\n    const activeUserRecipes = this.state.allRecipes.filter(recipe => recipe.userId === activeUser.id)\n\n    this.setState({activeUser, activeUserRecipes});\n  }\n\n  addRecipe(newRecipe) {\n    //const {activeUser, allRecipes, activeUserRecipes} this.state.activeUser\n    // 1) add id and user to the recipe\n    newRecipe.userId = this.state.activeUser.id;\n    newRecipe.id = this.state.allRecipes[this.state.allRecipes.length - 1].id + 1;\n\n    // 2) update all recipes and active user recipes\n    const allRecipes = this.state.allRecipes.concat(newRecipe);\n    const activeUserRecipes = this.state.activeUserRecipes.concat(newRecipe);\n\n    this.setState({allRecipes, activeUserRecipes});\n  }\n\n  render() {\n\n    const { activeUser, allUsers, activeUserRecipes } = this.state;\n    // const activeUser = this.state.activeUser;\n\n    return (\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage activeUser={activeUser} handleLogout={this.handleLogout}/>\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage users={allUsers} handleLogin={this.handleLogin}/>\n        </Route>\n        <Route path=\"/recipes\">\n          <RecipesPage recipes={activeUserRecipes} activeUser={activeUser} handleLogout={this.handleLogout} addRecipe={this.addRecipe}/>\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}